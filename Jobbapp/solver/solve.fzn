array [1..2] of int: X_INTRODUCED_4 = [1,-1];
array [1..9] of int: X_INTRODUCED_8 = [0,1,1,1,0,1,1,1,0];
var 1..3: X_INTRODUCED_1;
var 1..3: X_INTRODUCED_2;
var 1..2: X_INTRODUCED_3;
var 1..5: X_INTRODUCED_6 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_7 ::var_is_introduced :: is_defined_var;
var 1..6: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_11 ::var_is_introduced :: is_defined_var;
var 1..6: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_13 ::var_is_introduced :: is_defined_var;
var 1..8: X_INTRODUCED_14 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_15 ::var_is_introduced :: is_defined_var;
var 1..9: X_INTRODUCED_16 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_17 ::var_is_introduced :: is_defined_var;
var 1..9: X_INTRODUCED_18 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_19 ::var_is_introduced :: is_defined_var;
var 1..8: X_INTRODUCED_20 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21 ::var_is_introduced :: is_defined_var;
var 1..9: X_INTRODUCED_22 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23 ::var_is_introduced :: is_defined_var;
var 1..9: X_INTRODUCED_24 ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_25 ::var_is_introduced :: is_defined_var;
array [1..3] of var int: S:: output_array([1..3]) = [X_INTRODUCED_3,X_INTRODUCED_1,X_INTRODUCED_2];
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_3,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_3,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_le(X_INTRODUCED_4,[X_INTRODUCED_1,X_INTRODUCED_2],-1);
constraint array_int_element(X_INTRODUCED_6,X_INTRODUCED_8,X_INTRODUCED_7):: defines_var(X_INTRODUCED_7);
constraint array_int_element(X_INTRODUCED_10,X_INTRODUCED_8,X_INTRODUCED_11):: defines_var(X_INTRODUCED_11);
constraint array_int_element(X_INTRODUCED_12,X_INTRODUCED_8,X_INTRODUCED_13):: defines_var(X_INTRODUCED_13);
constraint array_int_element(X_INTRODUCED_14,X_INTRODUCED_8,X_INTRODUCED_15):: defines_var(X_INTRODUCED_15);
constraint array_int_element(X_INTRODUCED_16,X_INTRODUCED_8,X_INTRODUCED_17):: defines_var(X_INTRODUCED_17);
constraint array_int_element(X_INTRODUCED_18,X_INTRODUCED_8,X_INTRODUCED_19):: defines_var(X_INTRODUCED_19);
constraint array_int_element(X_INTRODUCED_20,X_INTRODUCED_8,X_INTRODUCED_21):: defines_var(X_INTRODUCED_21);
constraint array_int_element(X_INTRODUCED_22,X_INTRODUCED_8,X_INTRODUCED_23):: defines_var(X_INTRODUCED_23);
constraint array_int_element(X_INTRODUCED_24,X_INTRODUCED_8,X_INTRODUCED_25):: defines_var(X_INTRODUCED_25);
constraint int_lin_eq([4,-1],[X_INTRODUCED_3,X_INTRODUCED_6],3):: domain:: defines_var(X_INTRODUCED_6);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_1,X_INTRODUCED_3,X_INTRODUCED_10],3):: domain:: defines_var(X_INTRODUCED_10);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_12],3):: domain:: defines_var(X_INTRODUCED_12);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_3,X_INTRODUCED_1,X_INTRODUCED_14],3):: domain:: defines_var(X_INTRODUCED_14);
constraint int_lin_eq([4,-1],[X_INTRODUCED_1,X_INTRODUCED_16],3):: domain:: defines_var(X_INTRODUCED_16);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_18],3):: domain:: defines_var(X_INTRODUCED_18);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_20],3):: domain:: defines_var(X_INTRODUCED_20);
constraint int_lin_eq([1,3,-1],[X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_22],3):: domain:: defines_var(X_INTRODUCED_22);
constraint int_lin_eq([4,-1],[X_INTRODUCED_2,X_INTRODUCED_24],3):: domain:: defines_var(X_INTRODUCED_24);
solve  satisfy;
